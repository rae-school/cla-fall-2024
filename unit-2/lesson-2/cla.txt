Code as a Liberal Art is a new curricular initiative and University Minor in Eugene Lang College of Liberal Arts at The New School that teaches a critical computer science curriculum in the context of a liberal arts education. Students in Code as a Liberal Art both critically examine, and learn how to craft, the code that drives computational machinery, focusing on its relevance to the domains of the liberal arts: the humanities, the arts, and the social and physical sciences. Through discipline-specific projects, students learn to apply these skills to further their own critical and creative practices. They also get opportunities to consider questions of access, equity and social justice in relation to technological systems. Read more about the philosophy and objectives of Code as a Liberal Art at Lang.
This past winter session NSSR and Lang Professor of Anthropology Shannon Mattern taught Digital Ethnography, a project-based course utilizing research and ethnographic techniques to explore various technologies and digital environments.
Code as a Liberal Art aims to improve students’ hands-on experience with code and computational thinking by embedding these experiences within the practices of the liberal arts disciplines.  Courses introduce students to the theory and practice of computational thinking. They also help students see code as a tool for answering questions deriving from disciplinary perspectives, as well as a means of creative expression.  The goals of the program are to show students how coding is an integral part of multiple practices and ways of knowing, and to ensure that they are more conversant with computational logic and technology.

Web_Ready-20190326_Viruses_Bots_Rasnsomeware-015.jpg
On a broader scale, the Code as a Liberal Arts program strives to articulate a new form of civic education.  Big data and algorithmic processes structure almost all aspects of contemporary life, from Facebook feeds to credit score. Collectively, we have a responsibility to educate ourselves about the effects of these processes.  We believe that both code and computational thinking lie at the heart of liberal arts education in the 21st century.  They provide foundational skills in communication and critical thinking, respectively—alongside traditional competencies, such as writing and math.  And they are the basis upon which deeper questions based in the liberal arts disciplines can be framed.
Code as a Liberal Art classes are designed to help students:

Use computation as a tool to enhance their liberal arts education—to better analyze, communicate, create and learn;

Engage in project-based and collaborative learning that utilizes computational/algorithmic thinking;

 Gain a broader understanding of the historical and social factors leading to the increasing presence of computational systems in our lives;

 Work through the social and political implications of/embedded within computational technologies and develop an accompanying ethical framework; 

Appreciate the challenges of equity and access posed by increased reliance on computational technologies as well as their potential to reinforce existing inequalities in society; 

Think critically about the ways they and others interact with computation including understanding its limits from philosophical, logical, mathematical and public policy perspectives; &

Understand the intrinsic relationship between the physical world, analog environments and digital experiences.

This course provides a basic introduction to programming for liberal arts students with no previous experience. It includes an introduction to the history and philosophy of computation, an engagement with critical approaches to assessing the social impact of computation, an introduction to the philosophy of artificial intelligence, as well as some hands-on experience in writing your own code. The course aims to give students familiarity with the history, philosophy, and practice of coding, and experience in writing basic programs that will actually run

This course provides a basic introduction to coding for students with no prior experience using the Python computer language. It will introduce the use of computing and algorithms to web design, data analysis and visualization, and game design. Students will complete integrative projects within each of these areas, and leave the class with a strong foundation in the use of Python across a range of applications

Textile production influenced the industrial revolution causing social upheaval. Textile craft is also at the root of modern computer programming that has dramatically influenced the Information Age. This course provides a liberal arts perspective on the fundamental concepts of programming and computer architecture, exploring the premise that computer science is derived from textile craft production


This hybrid theory/practice seminar will trace the history of radical, activist, and countercultural uses of software and digital technology. From the milieu surrounding the Whole Earth Catalog, to hacker collectives such as Anonymous, to recent art and activism, we will explore efforts that have attempted to deploy software and its networks as anti-authoritarian or counter-hegemonic techniques. We will examine concepts that undergird the commitments of such actions, such as liberalism, freedom, sovereignty, and direct action. 

Do you ever feel like you’re being watched? Do you feel like your phone or your laptop is listening to you? Very likely, it is, and belongs to a new class of software that is trained to observe your behavior and predict your desires, or at least to correctly guess what you’ll type next. This kind of software has become increasingly common: it is embedded into the websites we visit such as the search algorithms in Google, Netflix, and Amazon; listening to us through Siri, Alexa, Cortana, and Google Assistant; watching us through cameras in our personal technologies and in our cities leading to facial recognition, Snapchat filters, and “deepfakes.” Generative media is not just a tool that we use, but an increasingly active collaborator with us across media forms in our everyday lives.

We experience the world not only in terms of its physical structure, but also in terms of a wide range of 'aesthetic' qualities such as pleasantness, orderliness, usability, attractiveness, and beauty. Experimental psychologists have been captivated by such phenomena for as long as there has been an experimental psychology, and the result is an incredibly rich and eclectic scientific literature on aesthetics, which is home to many lively debates and intriguing demonstrations. In this course we will discuss most of the major cognitive/psychological theories of aesthetics. We will also go deeper by conducting our own experiments in a series of intensive (sometimes multi-week) lab exercises. In order to partake in the fun of experimental research, we’ll need to learn how to program experiments and manipulate visual stimuli using the python programming language.

Social Inequality in the Age of Algorithms
Zoe Carey

This course looks at the ways in which social inequality may be alleviated, amplified, or otherwise altered by algorithmic decision-making. Computer algorithms that promise greater accuracy, efficiency, and objectivity are replacing decisions formerly performed by humans. But these algorithms are difficult to understand and evaluate, and often cannot be challenged if they make a mistake. Using real world examples of automated decision systems, this course will examine the promises and pitfalls of algorithmic decision-making. The first part of the course will provide a very brief overview of major sociological theories of stratification (it is preferable that students have some familiarity with social inequality, but not necessary). The remainder of the course will look at case studies from criminal justice reform, social service administration, and access to media and information. The case studies will focus on both the technical processes that generate inconclusive or inaccurate results and the social consequences of these systems. Throughout the semester, students will conduct in-class coding exercises, learning simple skills like scraping and cleaning digital trace data, structural topic modeling, and social network analysis using a combination of open source analytical tools and coding in R (no prior coding experience is required). The goal of these exercises is to demystify computational ontologies by cultivating skills in coding and quantitative analysis, allowing students to critically understand how algorithms function and produce biased outcomes.

SUMMER 2021
Art + Disability + Code
Shannon Finnegan

Accessibility is often considered in the realm of logistics and compliance—a checklist, a set of guidelines, a series of best practices. Rooted in the writing of disabled thinkers, artists, and activists, we will study and practice alternate ways to approach accessibility. How can we move accessibility into the realm of relationships? How can we approach it creatively and generously, centering disability culture? How do we make spaces and experiences that disabled people not only can access but want to access? How do we address the numerous oppressive forces that are entangled with inaccessibility and ableism? This course will focus on accessibility as it relates to art. Artworks and art spaces present a variety of accessibility scenarios to explore and there has been a lot of recent innovative access thinking led by artists. The class will include readings on disability and the history of design and disability. It will also include a series of projects and exercises where we’ll consider how we put this conceptual framework into action. Each project will encourage students to engage with a specific access need playfully and experimentally.

JANUARY / WINTER 2021
January & Winter Session courses were offered for the first time in early 2021.

The internet, like many technologies, is often claimed to possess the power to collapse time and space. As we emphasize this communication network's capacity to erase distance, the physicality of the internet itself also tends to disappear from public view–or at least, from public concern. At the same time, the internet has enabled expanded access to tools for seeing and comprehending the physical world, through web mapping tools and satellite imagery resources. This class will introduce students to Javascript-based tools for creating web maps using Leaflet, D3, and Mapshaper. We will focus on visualizing data concerning physical infrastructures central to the internet. Discussion and reading will explore various ways that infrastructure occupies, transforms, and is transformed by its material environments.

Internet Geographies
Ingrid Burrington

The acronym IRL, or “in real life,” purports to distinguish our “real,” unmediated, bodily existence from everything “unreal” that happens online. But the distinction isn’t quite so tidy; there’s hardly any aspect of our social and material worlds that remains untouched by digital technologies. How can we deploy the methods and sensibilities of ethnography, anthropology’s signature method, to better understand how the digital shapes our relationships, our institutions, our economies, our selves, etc? How might we deploy digital tools *in* that investigation? And how can we supplement anthropological methods with those from media studies, critical data studies, infrastructure studies, design, creative technology, and a variety of other fields? In this intensive intersession workshop, we’ll join with the Digital Ethnography Research Centre at RMIT in Melbourne, Australia, and the University of Toronto to engage in the globally networked exploration and application of digital ethnography. Students will be invited to complete course readings and screenings, small ethnographic exercises, and an individual or collaborative final project: a multimedia documentary of, or a field guide to, a digital environment or community or phenomenon. For the first two weeks in January, we’ll meet intensively for lecture, discussion, and collaborative exercises; students should expect to dedicate roughly five hours each day to either class meetings or asynchronous engagement, plus light homework. Students will then apply their learning through independently designed and executed digital fieldwork, which they’ll complete during the first half of the spring semester. From late January through mid-March, students should plan to dedicate roughly nine hours per week to independent research, individual consultations, and small-group workshops. The sensibilities and skills developed in this course will be highly relevant in a variety of fields, as most institutions and industries in the post-pandemic world will have to reimagine themselves to more integrally incorporate digital technologies.

Digital Ethnography
Shannon Mattern

FALL 2020 & EARLIER
Generative Media and Artificial Intelligence: Digital Theories of and Autonomy and Alienation
David Bering-Porter

Do you ever feel like you’re being watched? Do you feel like your phone or your laptop is listening to you? Very likely, it is, and belongs to a new class of software that is trained to observe your behavior and predict your desires, or at least to correctly guess what you’ll type next. This kind of software has become increasingly common: it is embedded into the websites we visit such as the search algorithms in Google, Netflix, and Amazon; listening to us through Siri, Alexa, Cortana, and Google Assistant; watching us through cameras in our personal technologies and in our cities leading to facial recognition, Snapchat filters, and “deepfakes.” Generative media is not just a tool that we use, but an increasingly active collaborator with us across media forms in our everyday lives. This course will explore the emerging field of generative media through a series of case studies ranging from visual and social media, digital technology and coding, audio recognition and synthesis, and the intersections of contemporary art practices and data science. We will draw on ideas from machine learning and artificial intelligence, digital theory and the history of technology, and philosophy to consider questions about the evolution of AI such as: is it possible for an AI to become fully conscious and autonomous? What is happening when my phone responds to a question? Can a computer make art? What does the phenomenology of artificial intelligence look like? What would it mean for an AI to have its own style or aesthetic? We will begin to answer these questions through an exploration generative media from the perspective of media studies, computer science and cybernetics, neural networks and deep learning, and generative adversarial networks. This course will emphasize philosophical, historical, and theoretical understandings of artificial intelligence and machine learning while looking to a diverse array of examples from contemporary art, digital culture, and popular media.

Since there have been computers there have been programs lurking surreptitiously in the background, ready to exploit them. This will be a survey course covering a history of computational skullduggery from the Stuxnet virus the US used to tamper with Iran’s nuclear reactor software, to the Mirai Botnet which used thousands of unsecured smart fridges, toasters and cameras to bring down major websites, to the algorithmic excess of Facebook and Google’s proprietary content distribution systems that led to false news stories being read by millions. As we explore these historical events, how they were perceived at the time and the social and technological changes they led to, we will also work to understand how these events happened from a computational perspective: what were the vulnerabilities of the system, and how were they exploited. The goal is for students to able to apply this perspective to new technologies as they emerge and to better understand and predict the potential for exploitation. Coursework will include readings, discussions, research papers, and coding exercises to explore some of the underlying ideas of the historical examples. For the final, students will have the option of creating a creative, compelling, safe and reversible virus in the form of a browser extension. Students should bring a laptop to class.

Viruses, Botnets and Ransomware: An Interactive History of Computers Doing Bad Things
Todd Anderson

This class is a survey course to live coding methodologies, artists, and techniques and introduces live coding as an interdisciplinary approach to making work. Live coding is a performance practice that involves real-time composition, usually with the use of computer programming. It often manifests as the practice of writing code with a programming language in order to change a live process, like sound or visuals. This results is an immediate feedback loop where the performer works to manipulate a running system in real time. Topics include the algorave movement and live coding techniques involving sound, visuals, the body, and text. This class will also include readings and discussions on the history of live coding, live coding philosophies, and its position in contemporary performance and computer science. Students will be introduced to a broad range of tools and environments for coding, such as Sonic Pi, Hydra, and in-browser techniques, as well as other art-forms that inform this methodology. A performance will take place at the end of the semester to showcase the techniques investigated. No previous coding experience is necessary. Students are expected to bring a laptop with them to every class; laptops are available to checkout through the University.

Live Coding
Melody Loveless

In this course we will ask the question: “How does SIRI work, and what is it actually doing?” Natural Language Processing (NLP) is a subfield of Artificial Intelligence that uses linguistic theory to attempt to provide more human centered ways to interact with a computer. Students explore the relationships between data, information and knowledge while being introduced to programming in Python. Readings are drawn from fifty years of literature in philosophy, linguistics and computer science that addresses the nature of language and meaning. The question we will debate is “Do computers know what they are talking about?” Using an extensive set of coding resources, students experience the satisfaction of creating a computer program that focuses on issues they identify. A major project is self-designed and can range from a language (text-based) game, to a literary creation, to a formal experiment in computational linguistics. This course fulfills the Integrative Course requirement of the Culture and Media major. [Tracks C, M, S]

Coding Natural Language 
Ursula Wolz

Silicon Valley loves its "tools." Tech critic Moira Weigel notes the frequency with which tech chiefs use the term, and she proposes that its popularity is largely attributable to its politics -- or the lack thereof; tool talk, she says, encodes "a rejection of politics in favor of tinkering." But humans have been using tools, to various political ends, for thousands of years. In this hybrid seminar/studio we examine a range of tools, the work they allow us to do, they ways they script particular modes of labor and enact particular power relationships, and what they make possible in the world. After building up a critical vocabulary (of tools, gizmos, and gadgets), we'll tackle a number of case studies -- from anvils, erasers, and sewing needles to algorithms and surveillance technologies. In our Monday sessions we'll study the week's case through critical and historical studies from anthropology, archaeology, media studies, science and technology studies, and related fields; and in our Wednesday sessions we'll explore that tool's creative applications, either by studying the work of artists and creative practitioners, or by engaging in hands-on labs. Each student will develop a research-based "critical manual" for a tool of their choice. For Anthropology majors this course satisfies requirements in Reading and Doing.

Tools: Anvils to Androids
Shannon Mattern

Cryptocurrency emerged as a means of decentralizing the financial system and making banks obsolete. Its detractors cite the ways in which it reproduces systems of capital. A critical engagement with this emerging technology is the responsibility of artists and researchers, who must find creative grounds with which to explore this new paradigm. This class examines the history and theory of cryptocurrency, as students learn how to create blockchain tokens, mine crypto, and produce alternative local currencies, for the purposes of cultural production. This class is a studio/seminar hybrid, so students should be prepared to read, discuss, create, and critique.

Crypto-currency: Money as Medium
Grayson Earle

Textile production influenced the industrial revolution causing social upheaval. Textile craft is also at the root of modern computer programming that has dramatically influenced the Information Age. This course provides a liberal arts perspective on the fundamental concepts of programming and computer architecture, exploring the premise that computer science is derived from textile craft production. Students will learn how crochet patterns provide models for understanding computer code, and how punch card techniques grew out of weaving and knitting. Computer architecture is introduced through constructing a Raspberry Pi -powered knitting machine based on Jacquard loom principles. Students will practice coding with programmable embroidery machines and then transfer those the techniques to 3D printing. Students will also read and discuss 'The Empire of Cotton' (Beckert) and 'The Fabric of Interface, Mobile Media, Design, and Gender' (Monteiro) to develop an historical perspective on the place of computer science in society.

Code Crafting
Ursula Wolz

What is the relationship between technology and musical aesthetics? Since antiquity, composers have incorporated new tools to create unique and original artworks. This course will explore the interaction between sound, art, and technology in the recent past. Starting with the birth of electricity, Futurism, and Dada, students will examine the practices and innovations that led to the most current ideas about sound art and music technology, and from here develop contemporary analytical methods for exploring and creating music. Students will be assigned weekly reading, listening, and sound composition exercises, using commercial production tools.

Sound and Technology
Clara Latham

Digital creative writing is an astoundingly broad field incorporating a wide variety of media and technical practices from twitter poems, to interactive fiction, to games to memes. The goal of this class is to help you discover and create a digital writing practice that is personally satisfying and yields interesting work. A secondary goal is to have you develop some basic literacy in the field and some grounds on which to base your taste. A third and final goal is to have you learn some basic principles of coding and computation as they apply to the creative arts.

In Poetic Operations, micha cárdenas considers contemporary digital media, artwork, and poetry in order to articulate trans of color strategies of safety and survival. Drawing on decolonial theory, women of color feminism, media theory, and queer of color critique, cárdenas develops a method she calls algorithmic analysis.

n this hybrid theory/practice seminar students will both critically examine, and learn how to craft, the code that drives computational machinery, focusing on its relevance to the domains of the liberal arts: the humanities, the arts, and the social and physical sciences. Students will learn the fundamentals of computational systems and ways that they relate to critical thinking and creative practice including: “distant reading” and the digital humanities, the production of generative artwork, techniques in data forensics, and methods for investigating algorithmic bias. Coursework will include weekly exercises using Python & Javascript. No prior coding experience is required. Students will need to bring a laptop computer to class, and can check one out from the university if necessary. This class fulfills the core requirement for the Code as a Liberal Art minor. [Read more] 

Code as a Liberal Art
Filipa Calado

MW @ 2:00-3:40pm

This fall we’re offering two versions of this course: one in Python, and the other in Javascript. This course provides an introduction to the foundational building blocks of software development, such as variables, control structures, data structures, and modular code organization. Coursework consists of hands-on weekly programming exercises, and semi-weekly readings offering insight into the culture, politics, and history of computer programs. [Watch our promo videos below or click here to read more: Python version, Javascript version]

While digital objects are often imagined to exist in an immaterial or virtual cyberspace, code and data actually exist in material forms and places in the physical world: data centers, routers, wired and wireless data flows, and physical computers in our homes, pockets, and public spaces. This hybrid theory/practice seminar will take these physical infrastructures of the digital as our primary objects of inquiry, developing both critical analysis and hands-on techniques to test, build, and intervene in these networks and data circulations. We will examine objects such as mesh networks, offline networks, sneakernets, wireless routers, and portable network kits. This course will include project work experimenting with various techniques in network hardware and protocols. No prior experience with these technologies is required.

The sublime as a philosophical concept refers to that which exceeds rationality: the incomprehensible beauty and horror of the spirit and the natural world. In this course, we will read texts in philosophy, media studies, religious studies, visual culture, futurism, and the environmental humanities to develop a deep understanding of how the unfathomable is rendered operable by algorithms and digital media. We will consider examples including quantum computing, “Big Data” and the cloud, generative artworks, machine learning, and techniques in climate modeling, as well as fears of a looming AI apocalypse known as “the Singularity”. Coursework will include programming exercises. No prior coding experience is required, although prior exposure via classes such as “Code Toolkit” will be helpful. 

This past winter session NSSR and Lang Professor of Anthropology Shannon Mattern taught Digital Ethnography, a project-based course utilizing research and ethnographic techniques to explore various technologies and digital environments. During the January intensive period, students met from three to five hours a day over a three-day period. Along with meeting their peers at The New School, they also met with students attending the University of Toronto and the Digital Ethnography Research Centre at RMIT in Melbourne, Australia. Following the January session of the course, students met with Professor Mattern on a weekly or biweekly basis through March 8 to discuss their course projects. Before starting on their projects, students had to provide a preliminary bibliography, which they supplemented with more readings during their meetings. 

Professor Mattern built the course as a 2000-level elective without presuming any prior knowledge. Since The New School remained online for the spring semester, she designed the class to take full advantage of teaching in a virtual environment. Additionally, the pandemic has placed a pause on field work for a year, thus necessitating new methods to help reorient anthropology studies. “Digital Ethnography is practicing participant observation in an online environment,” says Professor Mattern. 

Olivia Dick ‘24, an Anthropology student, registered for the course because of her interest in the ethnographic methodology. Her project examined what nostalgic music means to Gen Z, specifically asking the question: What is nostalgic music in a digital space? Through a discussion with a University of Toronto student, the pair learned they had a shared nostalgia for Hannah Montana and music from High School Musical 2, two pieces of media part of their elementary and middle school lives. For Dick, a highlight of the class was being able to talk to students outside of the U.S., an experience she didn’t think she’d get at The New School. 

Other project topics ranged from how Instagram has changed the public persona of photographers to examining the critical role of deeply encrypted platforms like Telegram and Signal in facilitating sex trafficking in South Korea. From the course Professor Mattern says that she hopes that students take away that “research, especially if self-directed, can be personally meaningful.” She underscored the fact that the Digital Ethnography students brought a tremendous amount of expertise to their projects and she learned from many of them.

When asked if she would teach this course during the regular academic year, Professor Mattern said she would “probably teach [Digital Ethnography] as a hybrid class” initially starting in-person to build camaraderie and integrating virtual-only sessions; similar to the latter part of the winter session, Professor Mattern would meet individually with students to discuss their projects. Professor Mattern notes that the course was developed under the high pressure of the pandemic and there are some logistical facets of the course that she would do differently.

Resource sharing is a “core political and ethical commitment” of Professor Mattern’s and she regularly shares her syllabi online. Throughout the duration of the course, she shared her excitement about her students’ work as well as the course itself on Twitter where graduate students around the world inquired if the course and its resources could be available to them. Professor Mattern wants to see what’s possible with inter-institutional collaboration and says, “Maybe making [collaboration] more formal through classes is logistically difficult to do, but it can be really exciting.”

